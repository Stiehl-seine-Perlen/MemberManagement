mp.messaging.incoming.words-in.topic=words
mp.messaging.outgoing.words-out.topic=words
mp.messaging.incoming.words-in.auto.offset.reset=earliest
%dev.quarkus.devservices.enabled=true
%dev.quarkus.kogito.devservices.shared=true
%dev.quarkus.datasource.db-kind=postgresql
%dev.quarkus.kafka.devservices.port=9090
%dev.quarkus.keycloak.devservices.port=8543
%dev.quarkus.oidc.auth-server-url=https://localhost:8543/realms/quarkus
#
%dev.quarkus.keycloak.devservices.realm-path=quarkus-realm.json
# Custom Keycloak Image
#quarkus.keycloak.devservices.image-name=ainges/keycloak_with_deployment:latest

quarkus.hibernate-orm.packages=de.benevolo.entities.user,de.benevolo.entities.global

quarkus.http.port=8084
quarkus.kogito.devservice.shared=true

# datasource configuration
quarkus.datasource.db-kind = postgresql

# drop and create the database at startup (use `update` to only update the schema)
quarkus.hibernate-orm.database.generation=drop-and-create
#
mp.messaging.outgoing.openMembersmeetingMsg.connector=smallrye-kafka
mp.messaging.outgoing.openMembersmeetingMsg.value.serializer=org.apache.kafka.common.serialization.StringSerializer
#
mp.messaging.outgoing.closedMembersmeetingMsg.connector=smallrye-kafka
mp.messaging.outgoing.closedMembersmeetingMsg.value.serializer=org.apache.kafka.common.serialization.StringSerializer
