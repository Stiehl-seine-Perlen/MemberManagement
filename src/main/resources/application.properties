#//dev-ui at http://localhost:8085/q/dev/

quarkus.http.port=8085  
quarkus.kogito.devservices.shared=true

quarkus.http.cors=true
%dev.quarkus.http.cors.origins=/.*/

quarkus.hibernate-orm.packages=de.benevolo.entities

#Verhindert das LÃ¶schen des Datenbestands bis zum Neustart von Docker
#quarkus.hibernate-orm.database.generation=update

#quarkus.hibernate-orm.database.generation=drop-and-create

%dev.quarkus.rest-client.association.url=http://localhost:8083


#Messaging for Membership Application
#mp.messaging.outgoing.send2finance.connector=smallrye-kafka
#mp.messaging.outgoing.send2finance.topic=de-benevolo-user2finance-in

#mp.messaging.incoming.acknowledge.connector=smallrye-kafka
#mp.messaging.incoming.acknowledge.topic=de-benevolo-acknowledge-out

#Messaging for Inform User
mp.messaging.outgoing.informUser.connector=smallrye-kafka
mp.messaging.outgoing.informUser.topic=de-benevolo-informUser-in
mp.messaging.outgoing.informUser.value.serializer=org.apache.kafka.common.serialization.StringSerializer

mp.messaging.incoming.acknowledgeUser.connector=smallrye-kafka
mp.messaging.incoming.acknowledgeUser.topic=de-benevolo-acknowledgeUser-out
mp.messaging.incoming.acknowledgeUser.value.deserializer=org.apache.kafka.common.serialization.StringDeserializer

#Messaging for Inform Finance
mp.messaging.outgoing.informFinance.connector=smallrye-kafka
mp.messaging.outgoing.informFinance.topic=de-benevolo-informFinance-in
mp.messaging.outgoing.informFinance.value.serializer=org.apache.kafka.common.serialization.StringSerializer

mp.messaging.incoming.acknowledgeFinance.connector=smallrye-kafka
mp.messaging.incoming.acknowledgeFinance.topic=de-benevolo-acknowledgeFinance-out
mp.messaging.incoming.acknowledgeFinance.value.deserializer=org.apache.kafka.common.serialization.StringDeserializer
