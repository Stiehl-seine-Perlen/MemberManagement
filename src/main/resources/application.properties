%dev.quarkus.devservices.enabled=true
%dev.quarkus.kogito.devservices.shared=true
%dev.quarkus.datasource.db-kind=postgresql
%dev.quarkus.kafka.devservices.port=9090
%dev.quarkus.keycloak.devservices.port=8543
%dev.quarkus.oidc.auth-server-url=https://localhost:8543/realms/quarkus
#
%dev.quarkus.keycloak.devservices.realm-path=quarkus-realm.json
# Custom Keycloak Image
#quarkus.keycloak.devservices.image-name=ainges/keycloak_with_deployment:latest

quarkus.hibernate-orm.packages=de.benevolo.entities.user,de.benevolo.entities.global, de.benevolo.entities.events
quarkus.kogito.devservice.shared=true

# datasource configuration
quarkus.datasource.db-kind = postgresql

quarkus.http.port=8080


quarkus.http.cors=true
%dev.quarkus.http.cors.origins=/.*/

%dev.quarkus.rest-client.association.url=http://localhost:8083

#Messaging for Inform User
mp.messaging.outgoing.informUser.connector=smallrye-kafka
mp.messaging.outgoing.informUser.topic=de-benevolo-informUser-in
mp.messaging.outgoing.informUser.value.serializer=org.apache.kafka.common.serialization.StringSerializer

mp.messaging.incoming.acknowledgeUser.connector=smallrye-kafka
mp.messaging.incoming.acknowledgeUser.topic=de-benevolo-acknowledgeUser-out
mp.messaging.incoming.acknowledgeUser.value.deserializer=org.apache.kafka.common.serialization.StringDeserializer

#Messaging for Inform Finance
mp.messaging.outgoing.informFinance.connector=smallrye-kafka
mp.messaging.outgoing.informFinance.topic=de-benevolo-informFinance-in
mp.messaging.outgoing.informFinance.value.serializer=org.apache.kafka.common.serialization.StringSerializer

mp.messaging.incoming.acknowledgeFinance.connector=smallrye-kafka
mp.messaging.incoming.acknowledgeFinance.topic=de-benevolo-acknowledgeFinance-out
mp.messaging.incoming.acknowledgeFinance.value.deserializer=org.apache.kafka.common.serialization.StringDeserializer

# drop and create the database at startup (use `update` to only update the schema)
quarkus.hibernate-orm.database.generation=drop-and-create
#
mp.messaging.outgoing.openMembersmeetingMsg.connector=smallrye-kafka
mp.messaging.outgoing.openMembersmeetingMsg.value.serializer=org.apache.kafka.common.serialization.StringSerializer
#
mp.messaging.outgoing.closedMembersmeetingMsg.connector=smallrye-kafka
mp.messaging.outgoing.closedMembersmeetingMsg.value.serializer=org.apache.kafka.common.serialization.StringSerializer

